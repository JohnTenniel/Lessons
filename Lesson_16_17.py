# посмотреть еще  раз с 2,10

#методы строк
# s = "hello, World! I am learning Python."
# print(s)
# print(s.count('h', 1, -4))  # поиск h в диапазоне от 1 до -4 тоесть в ello, World! I am learning Pyt
# print(s.count('h'))  # поиск h в диапазоне от 0 до конца, сначало ставим что ищем потом откуда начать и где закончить
# print(s.find(
#     'Python'))  # поиск подстроки в строке, возвращает индекс совпадения, т.е. индекс начала подстроки если нет совпадения то -1
# print(s.find('Python1'))
# print(s.index(
#     'Python'))  # поиск подстроки в строке, возвращает индекс совпадения, т.е. индекс начала подстроки если нет совпадения то будет ошибка
# # print(s.index('Python1'))
# #rfind и rindex - тот же поиск но не слева направо а с права на лево

# n = input()
# m = n.find(' ')
# print(m)
# print(n[m+1:],n[0:m])
#
# s = "hello, World! I am learning Python."
# print(s.endswith("on."))# заканчивается ли строка на то что в ()
# print(s.startswith("I am")) #начинается ли строка с того что в ()
# # либо True либо False

# .isdigit() - состоит ли введенное только из чисел ("1234".isdigit  -  выведет true если была бы хоть 1 буква то будет False)
# .isalnum() - состоит ли только из букв и цифр, если будет спецсимволы то будет False
# .isalpha()- проверка состоит ли только из букв
# .islower() - проверка состоит ли только из букв нижнего регистра игнорирует циффры и спецсимволы и проверяет только буквы строки
# .isupper()- проверка сос  тоит ли только из букв нижнего регистра игнорирует циффры и спецсимволы и проверяет только буквы строки
# print("py".center(10)) #центрирование текста, в данном случае выравнивает в центре 10 символов
# print("py".center(11,"-")) # - это символ заполнитель оставшегося пространства, если будет нечетное число то больше на 1 будет слева а остальное справа
#.lstrip - убирает пробельные символы слева если они существуют print("   py".lstrip()) - выведет py без провелов вначале
#также есть rstrip() - удаляет пробелы справа
# и strip() - удаляет все пробелы и слева и справа
# print("http://www.python.org".lstrip("/:pths")) #удалит символы слева из скобок пока не наткнется на символ которого нет в этих скобках
#.replace() - поиск и замена одного на другое
# .replace("asd","dsa", 2) - заменит asd в тексте на dsa 2 раза если будет больше то заменит только 2 первых найденных
# s = "-"
# seq = ("a","b","c")
# print(s.join(seq))
#" ".join(seq) - объеденит то чтчо в () в строку с разделителем указанным в " " или переменной как s
# также в () можно сразу писать то нужно обьеденить, но работает только с str()
# ":".join("hello") - выдаст h:e:l:l:o
# .split() - разделит строку на части
# print("a b s".split())
# print("a.b.s".split(".")) # разбивает на части по разделителю который указан в (), в первом случае пробел во втором .
# rsplit(), lsplit() - разделяет слева или справа, если добавить в (".",1) - то он отделит 1 элемент относительно . слева
# или справа остальное положит во второй тоесть a.b.s.d - при l будет (a, b.s.d) при r (a.b.s,d)



#Регульрные выражения
# import re
# s = "Я ищу совпадения в 2024 году. И я найду их в два счёта." #строка
# reg = "я" #шаблон
# reg2="[яу]"
# reg3 = "\."
# print(re.findall(reg, s)) #возвраает список найденных совпадений, s занчит  string
# #вернул только маленькие я т.к. сравнивает по ASCII и у Я и я разный код
# print(re.search(reg, s)) #возвращат первое совпадение с шаблоном
# # <re.Match object; span=(15, 16) - с какого индекса по какой, match='я' - что искал>, если не будет то будет none
# #есть дополнительные методы
# print(re.search(reg, s).span())# откуда докуда (15,16)
# print(re.search(reg, s).start())#начало откуда нашел 15
# print(re.search(reg, s).end())#конец найденного диапазона 16
# print(re.search(reg, s).group())#само что искалось
# #ищет первое встречание в тексте тоесть нашел в слове совпадения
# # отличие финдалл и серч что финдалл ищет все совпадения а серч только первое
# print(re.match(reg, s))#поиск по шаблону только в начале строки, если в начале нет такого то none
# # если будет я - none, если Я - <re.Match object; span=(0, 1), match='Я'>
# print(re.split(reg, s)) #['Я ищу совпадени', ' в 2024 году. И ', ' найду их в два счёта.']
# # print(re.split(reg2, s)) # ['Я ищ', ' совпадени', ' в 2024 год', '. И ', ' найд', ' их в два счёта.']
# # возвращает список в котором строка разбита по шаблону
# # print(re.split(reg2, s, 3)) # ['Я ищ', ' совпадени', ' в 2024 год', '. И я найду их в два счёта.']
# print(re.sub(reg3, "!", s)) #поиск и замена шаблон на то что в "", тоесть Я ищу совпадения в 2024 году! И я найду их в два счёта!
# #\. - просто экранирование чтобы искать просто . , чтобы не подчеркивало надо ставить либо "\\." либо r"\."
# print(re.sub(reg3, "!", s, 1)) #Я ищу совпадения в 2024 году! И я найду их в два счёта. - толко 1 замена


import re
s = "Я ищу совпадения в 2024 году. И я найду их в 2 два счёта." #строка
reg = r"2024"
# print(re.findall(reg, s))
# reg = r"[2024]"
# print(re.findall(reg, s))
# reg = r"[204]"
# print(re.findall(reg, s))
#примеры того как выглядит в папке 17





#Досмотреть с 2.30

